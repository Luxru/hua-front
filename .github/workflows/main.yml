# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Hua APP CD

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]
    types: [closed]
    

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: ["18.x"]
        python-version: ["3.9"]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Get source code
      uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Generate the config file
      run: python generate.py
    - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm ci
      - run: npm run build

    - name: Deploy to Server
      uses: easingthemes/ssh-deploy@main
      env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "/public /.next/standalone /.next/static /ecosystem.config.js"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: "/home/${{ secrets.REMOTE_USER }}/hua-front/"
          EXCLUDE: "/node_modules/"
          SCRIPT_BEFORE: |
            cd /home/${{ secrets.REMOTE_USER }}/hua-front/
            ls
          SCRIPT_AFTER: |
            cd /home/${{ secrets.REMOTE_USER }}/hua-front/
            echo ------------------------BEFORE BUILD STOP ------------------------
            pm2 ps
            pm2 delete all
            echo ------------------------AFTER BUILD STOP ------------------------
            pm2 ps
            pm2 start ecosystem.config.js
            echo ------------------------AFTER RUN ------------------------
            pm2 ps
            echo $RSYNC_STDOUT
